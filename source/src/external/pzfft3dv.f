#include "../timing.h90"
C
C     FFTE: A FAST FOURIER TRANSFORM PACKAGE
C
C     (C) COPYRIGHT SOFTWARE, 2000-2004, 2008-2011, ALL RIGHTS RESERVED
C                BY
C         DAISUKE TAKAHASHI
C         GRADUATE SCHOOL OF SYSTEMS AND INFORMATION ENGINEERING
C         UNIVERSITY OF TSUKUBA
C         1-1-1 TENNODAI, TSUKUBA, IBARAKI 305-8573, JAPAN
C         E-MAIL: daisuke@cs.tsukuba.ac.jp
C
C
C     PARALLEL 3-D COMPLEX FFT (2-D DECOMPOSITION) ROUTINE
C
C     FORTRAN77 + MPI SOURCE PROGRAM
C
C     CALL PZFFT3DV(A,B,NX,NY,NZ,ICOMMY,ICOMMZ,NPUY,NPUZ,IOPT)
C
C     NX IS THE LENGTH OF THE TRANSFORMS IN THE X-DIRECTION (INTEGER*4)
C     NY IS THE LENGTH OF THE TRANSFORMS IN THE Y-DIRECTION (INTEGER*4)
C     NZ IS THE LENGTH OF THE TRANSFORMS IN THE Z-DIRECTION (INTEGER*4)
C       ------------------------------------
C         NX = (2**IP) * (3**IQ) * (5**IR)
C         NY = (2**JP) * (3**JQ) * (5**JR)
C         NZ = (2**KP) * (3**KQ) * (5**KR)
C       ------------------------------------
C     ICOMMY IS THE COMMUNICATOR IN THE Y-DIRECTION (INTEGER*4)
C     ICOMMZ IS THE COMMUNICATOR IN THE Z-DIRECTION (INTEGER*4)
C     NPUY IS THE NUMBER OF PROCESSORS IN THE Y-DIRECTION (INTEGER*4)
C     NPUZ IS THE NUMBER OF PROCESSORS IN THE Z-DIRECTION (INTEGER*4)
C     IOPT = 0 FOR INITIALIZING THE COEFFICIENTS (INTEGER*4)
C     IOPT = -1 FOR FORWARD TRANSFORM WHERE
C              A(NX,NY/NPUY,NZ/NPUZ) IS COMPLEX INPUT VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE A(*,BLOCK,BLOCK)
C              B(NX,NY/NPUY,NZ/NPUZ) IS COMPLEX OUTPUT VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE B(*,BLOCK,BLOCK)
C     IOPT = +1 FOR INVERSE TRANSFORM WHERE
C              A(NX,NY/NPUY,NZ/NPUZ) IS COMPLEX INPUT VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE A(*,BLOCK,BLOCK)
C              B(NX,NY/NPUY,NZ/NPUZ) IS COMPLEX OUTPUT VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE B(*,BLOCK,BLOCK)
C     IOPT = -2 FOR FORWARD TRANSFORM WHERE
C              A(NX,NY/NPUY,NZ/NPUZ) IS COMPLEX INPUT VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE A(*,BLOCK,BLOCK)
C              B(NZ,NX/NPUY,NY/NPUZ) IS COMPLEX OUTPUT VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE B(*,BLOCK,BLOCK)
C     IOPT = +2 FOR INVERSE TRANSFORM WHERE
C              A(NZ,NX/NPUY,NY/NPUZ) IS COMPLEX INPUT VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE A(*,BLOCK,BLOCK)
C              B(NX,NY/NPUY,NZ/NPUZ) IS COMPLEX OUTPUT VECTOR (COMPLEX*16)
C!HPF$ DISTRIBUTE B(*,BLOCK,BLOCK)
C
C     WRITTEN BY DAISUKE TAKAHASHI
C
c----------------------------------------------------------------------
!>
!! \file
!! \brief  Subroutines from FFTE
!! \author Daisuke Takahashi@Tsukuba University
!<
      SUBROUTINE PZFFT3DV(A,B,NX,NY,NZ,ICOMMY,ICOMMZ,NPUY,NPUZ,IOPT)
c----------------------------------------------------------------------
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE 'param.h'
      COMPLEX*16 A(*),B(*)
      COMPLEX*16 WX(NDA3),WY(NDA3),WZ(NDA3)
      SAVE WX,WY,WZ
C
      NN=NX*(NY/NPUY)*(NZ/NPUZ)
C
      IF (IOPT .EQ. 0) THEN
        CALL SETTBL(WX,NX)
        CALL SETTBL(WY,NY)
        CALL SETTBL(WZ,NZ)
        RETURN
      END IF
C
      IF (IOPT .EQ. 1) THEN
!$OMP PARALLEL DO
        DO 10 I=1,NN
          A(I)=DCONJG(A(I))
   10   CONTINUE
      END IF
C
      IF (IOPT .EQ. 2) THEN
!$OMP PARALLEL DO
        DO 20 I=1,NN
          B(I)=DCONJG(A(I))
   20   CONTINUE
      END IF
C
      IF (IOPT .EQ. -1 .OR. IOPT .EQ. -2) THEN

#ifndef PME_PPLN_COMM_FFT
!.. For reduced communication latency. FFT is not overlapped with transpose comm.
!.. Appropriate for small grid and large number of processes. by Fujitsu.
        CALL PZFFT3DVFV(A,A,A,A,A,A,A,B,B,B,B,B,B,B,WX,WY,WZ,NX,NY,NZ,
     1                 ICOMMY,ICOMMZ,NPUY,NPUZ,IOPT)
#else
!.. original PZFFT3DV.
        CALL PZFFT3DVF(A,A,A,A,A,A,A,B,B,B,B,B,B,B,WX,WY,WZ,NX,NY,NZ,
     1                 ICOMMY,ICOMMZ,NPUY,NPUZ,IOPT)
#endif

      ELSE

#ifndef PME_PPLN_COMM_FFT
!.. For reduced communication latency. FFT is not overlapped with transpose comm.
!.. Appropriate for small grid and large number of processes. by Fujitsu.
        CALL PZFFT3DVBV(A,A,A,A,A,A,A,B,B,B,B,B,B,B,WX,WY,WZ,NX,NY,NZ,
     1                 ICOMMY,ICOMMZ,NPUY,NPUZ,IOPT)
#else
!.. original PZFFT3DV.
        CALL PZFFT3DVB(A,A,A,A,A,A,A,B,B,B,B,B,B,B,WX,WY,WZ,NX,NY,NZ,
     1                 ICOMMY,ICOMMZ,NPUY,NPUZ,IOPT)
#endif

      END IF
C
      IF (IOPT .EQ. -2) THEN
!$OMP PARALLEL DO
        DO 30 I=1,NN
          B(I)=A(I)
   30   CONTINUE
      END IF
C
      IF (IOPT .EQ. 1 .OR. IOPT .EQ. 2) THEN
        DN=1.0D0/(DBLE(NX)*DBLE(NY)*DBLE(NZ))
!$OMP PARALLEL DO
        DO 40 I=1,NN
          B(I)=DCONJG(B(I))*DN
   40   CONTINUE
      END IF
      RETURN
      END
      SUBROUTINE PZFFT3DVF(A,AXYZP,AXZYP,AYXPZ,AZPXY,AZXY,AZYX,B,BXPYZ,
     1                     BXZYP,BYXZ,BYPZX,BYZX,BZYPX,WX,WY,WZ,
     2                     NX,NY,NZ,ICOMMY,ICOMMZ,NPUY,NPUZ,IOPT)
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE 'mpif.h'
      INCLUDE 'param.h'
      COMPLEX*16 A(NX,NY/NPUY,*),AXYZP(NX/NPUY,NY/NPUZ,NZ/NPUZ,*),
     1           AXZYP(NX/NPUY,NZ/NPUZ,NY/NPUY,*),
     2           AYXPZ(NY/NPUY,NX/NPUY,*),
     3           AZPXY(NZ/NPUZ,NPUZ,NX/NPUY,*),AZXY(NZ,*),
     4           AZYX(NZ/NPUZ,NY,*)
      COMPLEX*16 B((NX/NPUY)*(NY/NPUZ),*),BXPYZ(NX/NPUY,NPUY,NY/NPUY,*),
     1           BXZYP(NX/NPUY,NZ/NPUZ,NY/NPUZ,*),
     2           BYPZX(NY/NPUY,NPUY*(NZ/NPUZ),*),BYXZ(NY/NPUY,NX,*),
     3           BYZX(NY,NZ/NPUZ,*),BZYPX(NZ/NPUZ,NY/NPUZ,NPUZ,*)
      COMPLEX*16 WX(*),WY(*),WZ(*)
      COMPLEX*16 C(NDA3)
      DIMENSION LNX(3),LNY(3),LNZ(3)
!$    INTEGER*4 OMP_GET_NUM_THREADS,OMP_GET_THREAD_NUM,TID
C
      CALL FACTOR(NX,LNX)
      CALL FACTOR(NY,LNY)
      CALL FACTOR(NZ,LNZ)
C
      NNXY=NX/NPUY
      NNYY=NY/NPUY
      NNYZ=NY/NPUZ
      NNZZ=NZ/NPUZ
      NN=NX*NNYY*NNZZ
C
!$    ICOUNT=0
!$OMP PARALLEL DO PRIVATE(C,NTHREADS,TID) SCHEDULE(STATIC,1)
      DO 60 K=1,NNZZ
!$      NTHREADS=OMP_GET_NUM_THREADS()
!$      TID=OMP_GET_THREAD_NUM()
        DO 40 JJ=1,NNYY,NBLK
          DO 10 J=JJ,MIN0(JJ+NBLK-1,NNYY)
            CALL FFT235(A(1,J,K),C,WX,NX,LNX)
   10     CONTINUE
          DO 30 I=1,NX
            DO 20 J=JJ,MIN0(JJ+NBLK-1,NNYY)
              BYXZ(J,I,K)=A(I,J,K)
   20       CONTINUE
   30     CONTINUE
   40   CONTINUE
!$ 50   CONTINUE
!$OMP FLUSH(ICOUNT)
!$      IF (MOD(ICOUNT,NTHREADS) .NE. TID) GO TO 50
        CALL MPI_ALLTOALL(BYXZ(1,1,K),(NN/NPUY)/NNZZ,MPI_DOUBLE_COMPLEX,
     1                    A(1,1,K),(NN/NPUY)/NNZZ,MPI_DOUBLE_COMPLEX,
     2                    ICOMMY,IERR)
!$OMP ATOMIC
!$      ICOUNT=ICOUNT+1
   60 CONTINUE
!$OMP PARALLEL DO
      DO 90 I=1,NNXY
        DO 80 K=1,NPUY*NNZZ
          DO 70 J=1,NNYY
            BYPZX(J,K,I)=AYXPZ(J,I,K)
   70     CONTINUE
   80   CONTINUE
   90 CONTINUE
!$    ICOUNT=0
!$OMP PARALLEL DO PRIVATE(C,NTHREADS,TID) SCHEDULE(STATIC,1)
      DO 150 I=1,NNXY
!$      NTHREADS=OMP_GET_NUM_THREADS()
!$      TID=OMP_GET_THREAD_NUM()
        DO 130 KK=1,NNZZ,NBLK
          DO 100 K=KK,MIN0(KK+NBLK-1,NNZZ)
            CALL FFT235(BYZX(1,K,I),C,WY,NY,LNY)
  100     CONTINUE
          DO 120 J=1,NY
            DO 110 K=KK,MIN0(KK+NBLK-1,NNZZ)
              AZYX(K,J,I)=BYZX(J,K,I)
  110       CONTINUE
  120     CONTINUE
  130   CONTINUE
!$140   CONTINUE
!$OMP FLUSH(ICOUNT)
!$      IF (MOD(ICOUNT,NTHREADS) .NE. TID) GO TO 140
        CALL MPI_ALLTOALL(AZYX(1,1,I),(NN/NPUZ)/NNXY,MPI_DOUBLE_COMPLEX,
     1                    BYZX(1,1,I),(NN/NPUZ)/NNXY,MPI_DOUBLE_COMPLEX,
     2                    ICOMMZ,IERR)
!$OMP ATOMIC
!$      ICOUNT=ICOUNT+1
  150 CONTINUE
!$OMP PARALLEL DO PRIVATE(C)
      DO 190 J=1,NNYZ
        DO 180 I=1,NNXY
          DO 170 L=1,NPUZ
            DO 160 K=1,NNZZ
              AZPXY(K,L,I,J)=BZYPX(K,J,L,I)
  160       CONTINUE
  170     CONTINUE
          CALL FFT235(AZPXY(1,1,I,J),C,WZ,NZ,LNZ)
  180   CONTINUE
  190 CONTINUE
      IF (IOPT .EQ. -2) RETURN
!$OMP PARALLEL DO
      DO 230 JJ=1,NZ,NBLK
        DO 220 II=1,NNXY*NNYZ,NBLK
          DO 210 J=JJ,MIN0(JJ+NBLK-1,NZ)
            DO 200 I=II,MIN0(II+NBLK-1,NNXY*NNYZ)
              B(I,J)=AZXY(J,I)
  200       CONTINUE
  210     CONTINUE
  220   CONTINUE
  230 CONTINUE
      CALL MPI_ALLTOALL(B,NN/NPUZ,MPI_DOUBLE_COMPLEX,A,NN/NPUZ,
     1                  MPI_DOUBLE_COMPLEX,ICOMMZ,IERR)
!$OMP PARALLEL DO
      DO 270 L=1,NPUZ
        DO 260 J=1,NNYZ
          DO 250 K=1,NNZZ
            DO 240 I=1,NNXY
              BXZYP(I,K,J,L)=AXYZP(I,J,K,L)
  240       CONTINUE
  250     CONTINUE
  260   CONTINUE
  270 CONTINUE
      CALL MPI_ALLTOALL(B,NN/NPUY,MPI_DOUBLE_COMPLEX,A,NN/NPUY,
     1                  MPI_DOUBLE_COMPLEX,ICOMMY,IERR)
!$OMP PARALLEL DO
      DO 310 K=1,NNZZ
        DO 300 J=1,NNYY
          DO 290 L=1,NPUY
            DO 280 I=1,NNXY
              BXPYZ(I,L,J,K)=AXZYP(I,K,J,L)
  280       CONTINUE
  290     CONTINUE
  300   CONTINUE
  310 CONTINUE
      RETURN
      END
!----- A derivative of PZFFT3DVF for reduced MPI latency by FJ. -----------
      SUBROUTINE PZFFT3DVFV(A,AXYZP,AXZYP,AYXPZ,AZPXY,AZXY,AZYX,B,
     1                     BXPYZ,BXZYP,BYXZ,BYPZX,BYZX,BZYPX,WX,WY,WZ,
     2                     NX,NY,NZ,ICOMMY,ICOMMZ,NPUY,NPUZ,IOPT)
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE 'mpif.h'
      INCLUDE 'param.h'
      COMPLEX*16 A(NX,NY/NPUY,*),AXYZP(NX/NPUY,NY/NPUZ,NZ/NPUZ,*),
     1           AXZYP(NX/NPUY,NZ/NPUZ,NY/NPUY,*),
C    2           AYXPZ(NY/NPUY,NX/NPUY,*),
     2           AYXPZ(NY/NPUY,NX/NPUY,NZ/NPUZ,NPUY),
     3           AZPXY(NZ/NPUZ,NPUZ,NX/NPUY,*),AZXY(NZ,*),
C    4           AZYX(NZ/NPUZ,NY,*)
     4           AZYX(NZ/NPUZ,NY/NPUZ,NX/NPUY,NPUZ)
      COMPLEX*16 B((NX/NPUY)*(NY/NPUZ),*),BXPYZ(NX/NPUY,NPUY,NY/NPUY,*),
     1           BXZYP(NX/NPUY,NZ/NPUZ,NY/NPUZ,*),
C    2           BYPZX(NY/NPUY,NPUY*(NZ/NPUZ),*),BYXZ(NY/NPUY,NX,*),
     2           BYPZX(NY,NZ/NPUZ,*),
     2           BYXZ(NY/NPUY,NX/NPUY,NZ/NPUZ,NPUY),
C    3           BYZX(NY,NZ/NPUZ,*),BZYPX(NZ/NPUZ,NY/NPUZ,NPUZ,*)
     3           BYZX(NY,NZ/NPUZ,*),BZYPX(NZ/NPUZ,NY/NPUZ,NX/NPUY,NPUZ)
      COMPLEX*16 WX(*),WY(*),WZ(*)
      COMPLEX*16 C(NDA3)
      DIMENSION LNX(3),LNY(3),LNZ(3)
!$    INTEGER*4 OMP_GET_NUM_THREADS,OMP_GET_THREAD_NUM,TID
C
      CALL FACTOR(NX,LNX)
      CALL FACTOR(NY,LNY)
      CALL FACTOR(NZ,LNZ)
C
      NNXY=NX/NPUY
      NNYY=NY/NPUY
      NNYZ=NY/NPUZ
      NNZZ=NZ/NPUZ
      NN=NX*NNYY*NNZZ
      NNZYZXY=NNZZ*NNYZ*NNXY
C
      TIMED_START(TM_FFT_F1)
!    ---X-----------------------
!$OMP PARALLEL DO COLLAPSE(2) PRIVATE(C) SCHEDULE(STATIC,1)
      DO 60 K=1,NNZZ
        DO 40 JJ=1,NNYY,NBLK
          DO 10 J=JJ,MIN0(JJ+NBLK-1,NNYY)
            CALL FFT235(A(1,J,K),C,WX,NX,LNX)
   10     CONTINUE
          DO 31 L=1,NPUY
          DO 30 I=1,NNXY
            DO 20 J=JJ,MIN0(JJ+NBLK-1,NNYY)
              BYXZ(J,I,K,L)=A(I+NNXY*(L-1),J,K)
   20       CONTINUE
   30     CONTINUE
   31   CONTINUE
   40   CONTINUE
   60 CONTINUE
      TIMED_STOP(TM_FFT_F1)
      TIMED_BARRIER_COM(TMB_ALLTOALL_F1,ICOMMY)
      TIMED_START(TM_ALLTOALL_F1)
      CALL MPI_ALLTOALL(BYXZ ,NN/NPUY,MPI_DOUBLE_COMPLEX,
     1                  AYXPZ,NN/NPUY,MPI_DOUBLE_COMPLEX,
     2                  ICOMMY,IERR)
      TIMED_STOP(TM_ALLTOALL_F1)
      TIMED_START(TM_FFTFCOPY_F1)
!$OMP PARALLEL DO COLLAPSE(2)
      DO 90 I=1,NNXY
        DO 80 K=1,NNZZ
          DO 71 L=1,NPUY
          DO 70 J=1,NNYY
            BYPZX(J+NNYY*(L-1),K,I)=AYXPZ(J,I,K,L)
   70     CONTINUE
   71     CONTINUE
   80   CONTINUE
   90 CONTINUE
      TIMED_STOP(TM_FFTFCOPY_F1)
      TIMED_START(TM_FFT_F2)
!    ---Y-----------------------
!$OMP PARALLEL DO COLLAPSE(2) PRIVATE(C) SCHEDULE(STATIC,1)
      DO 150 I=1,NNXY
        DO 130 KK=1,NNZZ,NBLK
          DO 100 K=KK,MIN0(KK+NBLK-1,NNZZ)
            CALL FFT235(BYZX(1,K,I),C,WY,NY,LNY)
  100     CONTINUE
          DO 121 L=1,NPUZ
          DO 120 J=1,NNYZ
            DO 110 K=KK,MIN0(KK+NBLK-1,NNZZ)
              AZYX(K,J,I,L)=BYZX(J+NNYZ*(L-1),K,I)
  110       CONTINUE
  120     CONTINUE
  121     CONTINUE
  130   CONTINUE
  150 CONTINUE
      TIMED_STOP(TM_FFT_F2)
      TIMED_BARRIER_COM(TMB_ALLTOALL_F2,ICOMMZ)
      TIMED_START(TM_ALLTOALL_F2)
        CALL MPI_ALLTOALL(AZYX ,NNZYZXY,MPI_DOUBLE_COMPLEX,
     1                    BZYPX,NNZYZXY,MPI_DOUBLE_COMPLEX,
     2                    ICOMMZ,IERR)
      TIMED_STOP(TM_ALLTOALL_F2)
      TIMED_START(TM_FFT_F3)
!    ---Z-----------------------
!$OMP PARALLEL DO COLLAPSE(2) PRIVATE(C)
      DO 190 J=1,NNYZ
        DO 180 I=1,NNXY
          DO 170 L=1,NPUZ
            DO 160 K=1,NNZZ
              AZPXY(K,L,I,J)=BZYPX(K,J,I,L)
  160       CONTINUE
  170     CONTINUE
          CALL FFT235(AZPXY(1,1,I,J),C,WZ,NZ,LNZ)
  180   CONTINUE
  190 CONTINUE
      TIMED_STOP(TM_FFT_F3)
      IF (IOPT .EQ. -2) RETURN
!$OMP PARALLEL DO COLLAPSE(2)
      DO 230 JJ=1,NZ,NBLK
        DO 220 II=1,NNXY*NNYZ,NBLK
          DO 210 J=JJ,MIN0(JJ+NBLK-1,NZ)
            DO 200 I=II,MIN0(II+NBLK-1,NNXY*NNYZ)
              B(I,J)=AZXY(J,I)
  200       CONTINUE
  210     CONTINUE
  220   CONTINUE
  230 CONTINUE
      CALL MPI_ALLTOALL(B,NN/NPUZ,MPI_DOUBLE_COMPLEX,A,NN/NPUZ,
     1                  MPI_DOUBLE_COMPLEX,ICOMMZ,IERR)
!$OMP PARALLEL DO COLLAPSE(2)
      DO 270 L=1,NPUZ
        DO 260 J=1,NNYZ
          DO 250 K=1,NNZZ
            DO 240 I=1,NNXY
              BXZYP(I,K,J,L)=AXYZP(I,J,K,L)
  240       CONTINUE
  250     CONTINUE
  260   CONTINUE
  270 CONTINUE
      CALL MPI_ALLTOALL(B,NN/NPUY,MPI_DOUBLE_COMPLEX,A,NN/NPUY,
     1                  MPI_DOUBLE_COMPLEX,ICOMMY,IERR)
!$OMP PARALLEL DO COLLAPSE(2)
      DO 310 K=1,NNZZ
        DO 300 J=1,NNYY
          DO 290 L=1,NPUY
            DO 280 I=1,NNXY
              BXPYZ(I,L,J,K)=AXZYP(I,K,J,L)
  280       CONTINUE
  290     CONTINUE
  300   CONTINUE
  310 CONTINUE
      RETURN
      END
!--------------------------------------------------------------------------
      SUBROUTINE PZFFT3DVB(A,AXPYZ,AXZYP,AYPZX,AYXZ,AYZX,AZYPX,B,BXYZP,
     1                     BXZYP,BYXPZ,BZPXY,BZXY,BZYX,WX,WY,WZ,
     2                     NX,NY,NZ,ICOMMY,ICOMMZ,NPUY,NPUZ,IOPT)
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE 'mpif.h'
      INCLUDE 'param.h'
      COMPLEX*16 A((NX/NPUY)*(NY/NPUZ),*),AXPYZ(NX/NPUY,NPUY,NY/NPUY,*),
     1           AXZYP(NX/NPUY,NZ/NPUZ,NY/NPUZ,*),
     2           AYPZX(NY/NPUY,NPUY*(NZ/NPUZ),*),AYXZ(NY/NPUY,NX,*),
     3           AYZX(NY,NZ/NPUZ,*),AZYPX(NZ/NPUZ,NY/NPUZ,NPUZ,*)
      COMPLEX*16 B(NX,NY/NPUY,*),BXYZP(NX/NPUY,NY/NPUZ,NZ/NPUZ,*),
     1           BXZYP(NX/NPUY,NZ/NPUZ,NY/NPUY,*),
     2           BYXPZ(NY/NPUY,NX/NPUY,*),
     3           BZPXY(NZ/NPUZ,NPUZ,NX/NPUY,*),BZXY(NZ,*),
     4           BZYX(NZ/NPUZ,NY,*)
      COMPLEX*16 WX(*),WY(*),WZ(*)
      COMPLEX*16 C(NDA3)
      DIMENSION LNX(3),LNY(3),LNZ(3)
!$    INTEGER*4 OMP_GET_NUM_THREADS,OMP_GET_THREAD_NUM,TID
C
      CALL FACTOR(NX,LNX)
      CALL FACTOR(NY,LNY)
      CALL FACTOR(NZ,LNZ)
C
      NNXY=NX/NPUY
      NNYY=NY/NPUY
      NNYZ=NY/NPUZ
      NNZZ=NZ/NPUZ
      NN=NNXY*NNYZ*NZ
C
      IF (IOPT .EQ. 1) THEN
!$OMP PARALLEL DO
        DO 40 L=1,NPUY
          DO 30 J=1,NNYY
            DO 20 K=1,NNZZ
              DO 10 I=1,NNXY
                BXZYP(I,K,J,L)=AXPYZ(I,L,J,K)
   10         CONTINUE
   20       CONTINUE
   30     CONTINUE
   40   CONTINUE
        CALL MPI_ALLTOALL(B,NN/NPUY,MPI_DOUBLE_COMPLEX,A,NN/NPUY,
     1                    MPI_DOUBLE_COMPLEX,ICOMMY,IERR)
!$OMP PARALLEL DO
        DO 80 L=1,NPUZ
          DO 70 K=1,NNZZ
            DO 60 J=1,NNYZ
              DO 50 I=1,NNXY
                BXYZP(I,J,K,L)=AXZYP(I,K,J,L)
   50         CONTINUE
   60       CONTINUE
   70     CONTINUE
   80   CONTINUE
        CALL MPI_ALLTOALL(B,NN/NPUZ,MPI_DOUBLE_COMPLEX,A,NN/NPUZ,
     1                    MPI_DOUBLE_COMPLEX,ICOMMZ,IERR)
!$OMP PARALLEL DO
        DO 120 II=1,NNXY*NNYZ,NBLK
          DO 110 JJ=1,NZ,NBLK
            DO 100 I=II,MIN0(II+NBLK-1,NNXY*NNYZ)
              DO 90 J=JJ,MIN0(JJ+NBLK-1,NZ)
                BZXY(J,I)=A(I,J)
   90         CONTINUE
  100       CONTINUE
  110     CONTINUE
  120   CONTINUE
      END IF
!$OMP PARALLEL DO PRIVATE(C)
      DO 160 I=1,NNXY
        DO 150 J=1,NNYZ
          CALL FFT235(BZPXY(1,1,I,J),C,WZ,NZ,LNZ)
          DO 140 L=1,NPUZ
            DO 130 K=1,NNZZ
              AZYPX(K,J,L,I)=BZPXY(K,L,I,J)
  130       CONTINUE
  140     CONTINUE
  150   CONTINUE
  160 CONTINUE
!$    ICOUNT=0
!$OMP PARALLEL DO PRIVATE(C,NTHREADS,TID) SCHEDULE(STATIC,1)
      DO 220 I=1,NNXY
!$      NTHREADS=OMP_GET_NUM_THREADS()
!$      TID=OMP_GET_THREAD_NUM()
!$170   CONTINUE
!$OMP FLUSH(ICOUNT)
!$      IF (MOD(ICOUNT,NTHREADS) .NE. TID) GO TO 170
        CALL MPI_ALLTOALL(AYZX(1,1,I),(NN/NPUZ)/NNXY,MPI_DOUBLE_COMPLEX,
     1                    BZYX(1,1,I),(NN/NPUZ)/NNXY,MPI_DOUBLE_COMPLEX,
     2                    ICOMMZ,IERR)
!$OMP ATOMIC
!$      ICOUNT=ICOUNT+1
        DO 210 KK=1,NNZZ,NBLK
          DO 190 K=KK,MIN0(KK+NBLK-1,NNZZ)
            DO 180 J=1,NY
              AYZX(J,K,I)=BZYX(K,J,I)
  180       CONTINUE
  190     CONTINUE
          DO 200 K=KK,MIN0(KK+NBLK-1,NNZZ)
            CALL FFT235(AYZX(1,K,I),C,WY,NY,LNY)
  200     CONTINUE
  210   CONTINUE
  220 CONTINUE
!$OMP PARALLEL DO
      DO 250 K=1,NPUY*NNZZ
        DO 240 I=1,NNXY
          DO 230 J=1,NNYY
            BYXPZ(J,I,K)=AYPZX(J,K,I)
  230     CONTINUE
  240   CONTINUE
  250 CONTINUE
!$    ICOUNT=0
!$OMP PARALLEL DO PRIVATE(C,NTHREADS,TID) SCHEDULE(STATIC,1)
      DO 310 K=1,NNZZ
!$      NTHREADS=OMP_GET_NUM_THREADS()
!$      TID=OMP_GET_THREAD_NUM()
!$260   CONTINUE
!$OMP FLUSH(ICOUNT)
!$      IF (MOD(ICOUNT,NTHREADS) .NE. TID) GO TO 260
        CALL MPI_ALLTOALL(B(1,1,K),(NN/NPUY)/NNZZ,MPI_DOUBLE_COMPLEX,
     1                    AYXZ(1,1,K),(NN/NPUY)/NNZZ,MPI_DOUBLE_COMPLEX,
     2                    ICOMMY,IERR)
!$OMP ATOMIC
!$      ICOUNT=ICOUNT+1
        DO 290 JJ=1,NNYY,NBLK
          DO 280 J=JJ,MIN0(JJ+NBLK-1,NNYY)
            DO 270 I=1,NX
              B(I,J,K)=AYXZ(J,I,K)
  270       CONTINUE
  280     CONTINUE
          DO 290 J=JJ,MIN0(JJ+NBLK-1,NNYY)
            CALL FFT235(B(1,J,K),C,WX,NX,LNX)
  290     CONTINUE
  300   CONTINUE
  310 CONTINUE
      RETURN
      END
!!#endif /**PME**/
!ya@20200609
!----- A derivative of PZFFT3DVB for reduced MPI latency by FJ. -----------
      SUBROUTINE PZFFT3DVBV(A,AXPYZ,AXZYP,AYPZX,AYXZ,AYZX,AZYPX,B,BXYZP,
     1                     BXZYP,BYXPZ,BZPXY,BZXY,BZYX,WX,WY,WZ,
     2                     NX,NY,NZ,ICOMMY,ICOMMZ,NPUY,NPUZ,IOPT)
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE 'mpif.h'
      INCLUDE 'param.h'
      COMPLEX*16 A((NX/NPUY)*(NY/NPUZ),*),AXPYZ(NX/NPUY,NPUY,NY/NPUY,*),
     1           AXZYP(NX/NPUY,NZ/NPUZ,NY/NPUZ,*),
C    2           AYPZX(NY/NPUY,NPUY*(NZ/NPUZ),*),AYXZ(NY/NPUY,NX,*),
     2           AYPZX(NY/NPUY,NPUY,NZ/NPUZ,NX/NPUY),
     2           AYXZ(NY/NPUY,NX/NPUY,NZ/NPUZ,NPUY),
C    3           AYZX(NY,NZ/NPUZ,*),AZYPX(NZ/NPUZ,NY/NPUZ,NPUZ,*)
     3           AYZX(NY,NZ/NPUZ,*),AZYPX(NZ/NPUZ,NY/NPUZ,NX/NPUY,NPUZ)
      COMPLEX*16 B(NX,NY/NPUY,*),BXYZP(NX/NPUY,NY/NPUZ,NZ/NPUZ,*),
     1           BXZYP(NX/NPUY,NZ/NPUZ,NY/NPUY,*),
C    2           BYXPZ(NY/NPUY,NX/NPUY,*),
     2           BYXPZ(NY/NPUY,NX/NPUY,NZ/NPUZ,NPUY),
     3           BZPXY(NZ/NPUZ,NPUZ,NX/NPUY,*),BZXY(NZ,*),
C    4           BZYX(NZ/NPUZ,NY,*)
     4           BZYX(NZ/NPUZ,NY/NPUZ,NX/NPUY,NPUZ)
      COMPLEX*16 WX(*),WY(*),WZ(*)
      COMPLEX*16 C(NDA3)
      DIMENSION LNX(3),LNY(3),LNZ(3)
!$    INTEGER*4 OMP_GET_NUM_THREADS,OMP_GET_THREAD_NUM,TID
C
      CALL FACTOR(NX,LNX)
      CALL FACTOR(NY,LNY)
      CALL FACTOR(NZ,LNZ)
C
      NNXY=NX/NPUY
      NNYY=NY/NPUY
      NNYZ=NY/NPUZ
      NNZZ=NZ/NPUZ
      NN=NNXY*NNYZ*NZ
      NNZYZXY=NNZZ*NNYZ*NNXY
      NNYXYZ =NNYY*NNXY*NNZZ
C
      IF (IOPT .EQ. 1) THEN
!$OMP PARALLEL DO COLLAPSE(2)
        DO 40 L=1,NPUY
          DO 30 J=1,NNYY
            DO 20 K=1,NNZZ
              DO 10 I=1,NNXY
                BXZYP(I,K,J,L)=AXPYZ(I,L,J,K)
   10         CONTINUE
   20       CONTINUE
   30     CONTINUE
   40   CONTINUE
        CALL MPI_ALLTOALL(B,NN/NPUY,MPI_DOUBLE_COMPLEX,A,NN/NPUY,
     1                    MPI_DOUBLE_COMPLEX,ICOMMY,IERR)
!$OMP PARALLEL DO COLLAPSE(2)
        DO 80 L=1,NPUZ
          DO 70 K=1,NNZZ
            DO 60 J=1,NNYZ
              DO 50 I=1,NNXY
                BXYZP(I,J,K,L)=AXZYP(I,K,J,L)
   50         CONTINUE
   60       CONTINUE
   70     CONTINUE
   80   CONTINUE
        CALL MPI_ALLTOALL(B,NN/NPUZ,MPI_DOUBLE_COMPLEX,A,NN/NPUZ,
     1                    MPI_DOUBLE_COMPLEX,ICOMMZ,IERR)
!$OMP PARALLEL DO COLLAPSE(2)
        DO 120 II=1,NNXY*NNYZ,NBLK
          DO 110 JJ=1,NZ,NBLK
            DO 100 I=II,MIN0(II+NBLK-1,NNXY*NNYZ)
              DO 90 J=JJ,MIN0(JJ+NBLK-1,NZ)
                BZXY(J,I)=A(I,J)
   90         CONTINUE
  100       CONTINUE
  110     CONTINUE
  120   CONTINUE
      END IF
!    ---Z-----------------------
      TIMED_START(TM_FFT_B1)
!$OMP PARALLEL DO COLLAPSE(2) PRIVATE(C)
      DO 160 I=1,NNXY
        DO 150 J=1,NNYZ
          CALL FFT235(BZPXY(1,1,I,J),C,WZ,NZ,LNZ)
          DO 140 L=1,NPUZ
            DO 130 K=1,NNZZ
              AZYPX(K,J,I,L)=BZPXY(K,L,I,J)
  130       CONTINUE
  140     CONTINUE
  150   CONTINUE
  160 CONTINUE
      TIMED_STOP(TM_FFT_B1)
      TIMED_BARRIER_COM(TMB_ALLTOALL_B1,ICOMMZ)
      TIMED_START(TM_ALLTOALL_B1)
!    ---Y-----------------------
        CALL MPI_ALLTOALL(AZYPX,NNZYZXY,MPI_DOUBLE_COMPLEX,
     1                    BZYX ,NNZYZXY,MPI_DOUBLE_COMPLEX,
     2                    ICOMMZ,IERR)
      TIMED_STOP(TM_ALLTOALL_B1)
      TIMED_START(TM_FFT_B2)
!$OMP PARALLEL DO COLLAPSE(2) PRIVATE(C) SCHEDULE(STATIC,1)
      DO 220 I=1,NNXY
        DO 210 KK=1,NNZZ,NBLK
          DO 190 K=KK,MIN0(KK+NBLK-1,NNZZ)
            DO 180 L=1,NPUZ
            DO 180 J=1,NNYZ
              AYZX(J+NNYZ*(L-1),K,I)=BZYX(K,J,I,L)
  180       CONTINUE
  181       CONTINUE
  190     CONTINUE
          DO 200 K=KK,MIN0(KK+NBLK-1,NNZZ)
            CALL FFT235(AYZX(1,K,I),C,WY,NY,LNY)
  200     CONTINUE
  210   CONTINUE
  220 CONTINUE
      TIMED_STOP(TM_FFT_B2)
      TIMED_START(TM_FFTFCOPY_B1)
!    ---X-----------------------
!$OMP PARALLEL DO COLLAPSE(2)
      DO 250 K=1,NNZZ
      DO 241 L=1,NPUY
        DO 240 I=1,NNXY
          DO 230 J=1,NNYY
            BYXPZ(J,I,K,L)=AYPZX(J,L,K,I)
  230     CONTINUE
  240   CONTINUE
  241   CONTINUE
  250 CONTINUE
      TIMED_STOP(TM_FFTFCOPY_B1)
      TIMED_BARRIER_COM(TMB_ALLTOALL_B2,ICOMMY)
      TIMED_START(TM_ALLTOALL_B2)
        CALL MPI_ALLTOALL(B   ,NNYXYZ,MPI_DOUBLE_COMPLEX,
     1                    AYXZ,NNYXYZ,MPI_DOUBLE_COMPLEX,
     2                    ICOMMY,IERR)
      TIMED_STOP(TM_ALLTOALL_B2)
      TIMED_START(TM_FFT_B3)
!$OMP PARALLEL DO COLLAPSE(2) PRIVATE(C) SCHEDULE(STATIC,1)
      DO 310 K=1,NNZZ
        DO 300 JJ=1,NNYY,NBLK
          DO 280 J=JJ,MIN0(JJ+NBLK-1,NNYY)
            DO 271 L=1,NPUY
            DO 270 I=1,NNXY
              B(I+NNXY*(L-1),J,K)=AYXZ(J,I,K,L)
  270       CONTINUE
  271       CONTINUE
  280     CONTINUE
          DO 290 J=JJ,MIN0(JJ+NBLK-1,NNYY)
            CALL FFT235(B(1,J,K),C,WX,NX,LNX)
  290     CONTINUE
  300   CONTINUE
  310 CONTINUE
      TIMED_STOP(TM_FFT_B3)
      RETURN
      END
!--------------------------------------------------------------------------
